//! 最小公倍数(least common multiple)
//!
//! 最小公倍数(lcm)を計算する．
//!
//! # 使用例
//! ```
//! use reprol::math::lcm::Lcm;
//! assert_eq!(6u64.lcm(8), 24);
//! ```

use crate::math::gcd::Gcd;

pub trait Lcm: Gcd {
    fn lcm(self, rhs: Self) -> Self;
}

macro_rules! impl_lcm_unsigned {
    ($ty: ty) => {
        impl Lcm for $ty {
            fn lcm(self, rhs: Self) -> Self {
                if self == 0 || rhs == 0 {
                    0
                } else {
                    self / self.gcd(rhs) * rhs
                }
            }
        }
    };
}

macro_rules! impl_lcm_signed {
    ($ty: ty) => {
        impl Lcm for $ty {
            fn lcm(self, rhs: Self) -> Self {
                let m = self.abs();
                let n = rhs.abs();
                if m == 0 || n == 0 {
                    return 0;
                } else {
                    m / self.gcd(rhs) * n
                }
            }
        }
    };
}

macro_rules! impl_lcm_for {
    (unsigned: [$($u:ty),* $(,)?], signed: [$($s:ty),* $(,)?]$(,)?) => {
        $( impl_lcm_unsigned!($u); )*
        $( impl_lcm_signed!($s); )*
    };
}

impl_lcm_for! {
    unsigned: [u8, u16, u32, u64, u128, usize],
    signed:   [i8, i16, i32, i64, i128, isize],
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_lcm_i32() {
        let testcases: Vec<(i32, i32, i32)> = vec![
            (0, 0, 0),
            (4, 5, 20),
            (6, 8, 24),
            (7, 3, 21),
            (10, 15, 30),
            (7, 3, 21),
            (9, 6, 18),
            (42, 42, 42),
            (-4, 5, 20),
            (-6, -8, 24),
            (-7, 3, 21),
            (-42, -42, 42),
            (-16934, 21456, 181667952),
            (4061, 17535, 71209635),
            (11413, 2035, 23225455),
            (-31924, 22969, 733262356),
            (-13923, -11930, 166101390),
            (27225, 15520, 84506400),
            (-6292, 12602, 39645892),
            (-26124, 11907, 14812308),
            (-5927, -12080, 71598160),
            (-19952, -7767, 154967184),
        ];
        for &(x, y, ans) in &testcases {
            assert_eq!(x.lcm(y), ans);
        }
    }

    #[test]
    fn test_lcm_u32() {
        let testcases: Vec<(u32, u32, u32)> = vec![
            (55588, 58619, 3258512972),
            (16754, 4840, 40544680),
            (42646, 55601, 2371160246),
            (680, 12245, 1665320),
            (29744, 54319, 1615664336),
            (7166, 97, 695102),
            (64940, 56997, 3701385180),
            (27627, 29698, 820466646),
            (36, 7561, 272196),
            (25830, 105, 25830),
        ];
        for &(x, y, ans) in &testcases {
            assert_eq!(x.lcm(y), ans);
        }
    }

    #[test]
    fn test_lcm_i64() {
        let testcases: Vec<(i64, i64, i64)> = vec![
            (-911109363, -1438277576, 1310428166086544088),
            (997225435, 358789037, 357793553495556095),
            (26741635, 240717441, 6437177945356035),
            (-1457667356, -703823896, 256485279392984744),
            (1378948502, -845876056, 583209760149434056),
            (-1072982164, -1090648114, 585122986761119348),
            (977756016, -924190295, 903632620865064720),
            (-1850903376, 762747108, 117647599769286384),
            (-1182472694, -1292792927, 1528692335173835338),
            (709683584, 2087677753, 1481590629986106752),
        ];
        for &(x, y, ans) in &testcases {
            assert_eq!(x.lcm(y), ans);
        }
    }

    #[test]
    fn test_lcm_u64() {
        let testcases: Vec<(u64, u64, u64)> = vec![
            (3027432665, 1513423987, 4581789214238335355),
            (2665804008, 2232814756, 1488061631416585512),
            (1710573362, 260947066, 223184549995827946),
            (1275680950, 3665156522, 2337785176941827950),
            (2256591705, 190081676, 428936733334097580),
            (4113355846, 3617149130, 7439310759869656990),
            (1020861211, 3845826640, 3926055241006461040),
            (1643613622, 725049328, 595850476061373008),
            (3218938301, 2318050956, 7461663005938065756),
            (2261736816, 885157517, 2001993344158045872),
        ];
        for &(x, y, ans) in &testcases {
            assert_eq!(x.lcm(y), ans);
        }
    }

    #[test]
    fn test_lcm_u128() {
        let testcases = vec![(
            1_000_000_000_000_000_000u128,
            500_000_000_000_000_000u128,
            1_000_000_000_000_000_000u128,
        )];
        for &(x, y, ans) in &testcases {
            assert_eq!(x.lcm(y), ans);
        }
    }
}
