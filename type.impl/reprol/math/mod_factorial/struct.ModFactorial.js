(function() {
    var type_impls = Object.fromEntries([["reprol",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModFactorial%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/reprol/math/mod_factorial.rs.html#12-48\">Source</a><a href=\"#impl-ModFactorial%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const P: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>&gt; <a class=\"struct\" href=\"reprol/math/mod_factorial/struct.ModFactorial.html\" title=\"struct reprol::math::mod_factorial::ModFactorial\">ModFactorial</a>&lt;P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/reprol/math/mod_factorial.rs.html#14-28\">Source</a><h4 class=\"code-header\">pub fn <a href=\"reprol/math/mod_factorial/struct.ModFactorial.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>$0!$から$n!$までの階乗を前計算する</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.factorial\" class=\"method\"><a class=\"src rightside\" href=\"src/reprol/math/mod_factorial.rs.html#31-33\">Source</a><h4 class=\"code-header\">pub fn <a href=\"reprol/math/mod_factorial/struct.ModFactorial.html#tymethod.factorial\" class=\"fn\">factorial</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"reprol/math/modint/struct.ModInt.html\" title=\"struct reprol::math::modint::ModInt\">ModInt</a>&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>階乗$n!$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.factorial_inv\" class=\"method\"><a class=\"src rightside\" href=\"src/reprol/math/mod_factorial.rs.html#36-38\">Source</a><h4 class=\"code-header\">pub fn <a href=\"reprol/math/mod_factorial/struct.ModFactorial.html#tymethod.factorial_inv\" class=\"fn\">factorial_inv</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"reprol/math/modint/struct.ModInt.html\" title=\"struct reprol::math::modint::ModInt\">ModInt</a>&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>階乗の逆数$1/n!$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.binomial\" class=\"method\"><a class=\"src rightside\" href=\"src/reprol/math/mod_factorial.rs.html#41-47\">Source</a><h4 class=\"code-header\">pub fn <a href=\"reprol/math/mod_factorial/struct.ModFactorial.html#tymethod.binomial\" class=\"fn\">binomial</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"reprol/math/modint/struct.ModInt.html\" title=\"struct reprol::math::modint::ModInt\">ModInt</a>&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>二項係数${}_n C_k$</p>\n</div></details></div></details>",0,"reprol::math::mod_factorial::ModFactorial998244353","reprol::math::mod_factorial::ModFactorial1000000007"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3475]}